文本序号,用户名,版本号,时间,成员角色,text,issue_topic,score,tag
0,morningman,0.12.0-rc03,2020-06-30 23:13:46,CONTRIBUTOR,How to generate the value of the 【version】 column? Is is auto generated? Or it has to be in the user's origin 【load】 data?,[Proposal] Doris support 【version】 column for REPLACE aggregate type,1,version;load;replace;support;do
1,Youngwb,0.12.0-rc03,2020-07-01 14:17:42,CONTRIBUTOR AUTHOR, How to generate the value of the `【version】` column? Is is auto generated? Or it has to be in the user's origin 【load】 data?it's user's origin 【load】  data,[Proposal] Doris support 【version】 column for REPLACE aggregate type,1,version;load;replace;support;do
2,yangzhg,0.12.0-rc03,2020-07-01 16:18:16,MEMBER,"I suggest that the columns used for keeping order should not exist in the create table statement, but as a 【hidden】 column. When creating a unique table, add a property such as 【sequence】=true, so that be can automatically add a 【hidden】 one after the key column. The 【hidden】 key column is only used for sorting, so that it can be used as a sorting basis when doing compaction and read. A column may be configed as a 【sequence】 column during 【load】",[Proposal] Doris support 【version】 column for REPLACE aggregate type,1,version;sequence;hidden;load;replace;support;do
3,morningman,0.12.0-rc03,2020-07-01 17:19:49,CONTRIBUTOR," I suggest that the columns used for keeping order should not exist in the create table statement, but as a 【hidden】 column. When creating a unique table, add a property such as 【sequence】=true, so that be can automatically add a 【hidden】 one after the key column. The 【hidden】 key column is only used for sorting, so that it can be used as a sorting basis when doing compaction and read. A column may be configed as a 【sequence】 column during 【load】+1.The only function of the `【version】` column is to retain the order information of the data in the business logic. So if the `【version】` column appears in the table schema explicitly, we cannot control the user's query behavior for this column.",[Proposal] Doris support 【version】 column for REPLACE aggregate type,1,version;sequence;hidden;load;replace;support;do
4,Youngwb,0.12.0-rc03,2020-07-07 21:21:13,CONTRIBUTOR AUTHOR,"According to @morningman @yangzhg 's suggest, I made some 【corrections】 nameuse `【sequence】` column instead of `【version】` column  for user understand easy. Create tableUse UNIQUEKEYS instead of AGGKEYS. Because 【sequence】 column is a 【hidden】 column,  there is no need to create a `【version】` column with MAX AGGTYPE.```CREATE TABLE `test1` (`pinid` bigint(20) NOT NULL COMMENT """",`date` date NOT NULL COMMENT """",`groupid` bigint(20) NOT NULL COMMENT """",`keyword` varchar(128)  NOT NULL) ENGINE=OLAPUNIQUE KEY(`pinid`, `date`, `groupid`)PROPERTIES (  ""functioncolumn.sequencetype"" = ""int"");```like such example, user need to add `sequencetype` to Identify the 【sequence】 column type. It only support the Integer types (int, bigint, largeint) and  time types(date, datetime). User can't query the `sequencecolumn` 【hidden】 in table ,  but can add one column which value is equal to `sequencecolumn`.  like this```CREATE TABLE `test2` (`pinid` bigint(20) NOT NULL COMMENT """",`date` date NOT NULL COMMENT """",`groupid` bigint(20) NOT NULL COMMENT """",`sequencevisiable` int NOT NULL,`keyword` varchar(128)  NOT NULL) ENGINE=OLAPUNIQUE KEY(`pinid`, `date`, `groupid`)PROPERTIES (""functioncolumn.sequencetype"" = ""int"");```Column names are not necessarily ""sequencevisiable"", this is just an example. The user ensures that the values are same by specifying parameters at 【LOAD】 time 【LOAD】 Stream 【Load】`curl locationtrusted u root H ""columns: pinid,date,groupid,sourcesequence,keyword""  H ""functioncolumn.sequencecol: sourcesequence"" T testload  http://127.0.01:8030/api/test/test1/streamload` Broker 【Load】```LOAD LABEL test.test11(    DATA INFILE(""hdfs://path/to/loadfile"")    INTO TABLE `test1`    FORMAT AS ""parquet""    (pinid,date,groupid,sourcesequence,keyword)    ORDER BY sourcesequence) with BROKER brokername (...)``` Routine Load```CREATE ROUTINE LOAD test1job ON test1COLUMNS TERMINATED BY "","",(pinid,date,groupid,sourcesequence,keyword)ORDER BY sourcesequencePROPERTIES(    ""desiredconcurrentnumber""=""3"",    ""maxbatchinterval"" = ""30"",    ""maxbatchrows"" = ""1000000"",    ""maxbatchsize"" = ""509715200"") FROM KAFKA(    ""kafkabrokerlist"" = ""..."",    ""kafkatopic"" = ""..."",    ""property.client.id"" = ""..."",    ""property.group.id"" = ""..."");```I added a parameter `sequencecol` to identify the source data for the sequence column at load,  because it's 【hidden】 column, user need to identify the source column in `columnsmapping`. For table `test2` which has column `sequencevisiable`, user can set ""sequencecol"" = ""sequencevisiable"" at properties,  which means the 【hidden】 column ""sequencecol"" is same with the ""sequencevisiable"" in table, user can query the the column ""sequencevisiable"" instead of ""sequencecol""",[Proposal] Doris support 【version】 column for REPLACE aggregate type,-1,version;sequence;hidden;load;correction;replace;test;support;like;do
5,morningman,0.12.0-rc03,2020-07-07 22:52:32,CONTRIBUTOR,"If user create `sequence【visible】` column in table, does it still has a 【hidden】 【sequence】 column?In my point, it should has.",[Proposal] Doris support 【version】 column for REPLACE aggregate type,0,version;sequence;hidden;replace;support;do
6,Youngwb,0.12.0-rc03,2020-07-07 23:24:58,CONTRIBUTOR AUTHOR," If user create `sequence【visible】` column in table, does it still has a 【hidden】 sequence column? In my point, it should has.yes, it has.  ",[Proposal] Doris support 【version】 column for REPLACE aggregate type,0,version;sequence;hidden;replace;support;do
7,chaoyli,0.12.0-rc03,2020-07-08 13:13:40,CONTRIBUTOR,"I think it's better to handle the 【problem】 in 【load】.If you want to preserve the ordering, you can speculate the behavior in the 【load】 command.【CreateTable】 should not catch this logic, otherwise it's confused to people to understand the create table.",[Proposal] Doris support 【version】 column for REPLACE aggregate type,-1,version;load;problem;replace;support;confuse;do;want
8,Youngwb,0.12.0-rc03,2020-07-08 16:54:19,CONTRIBUTOR AUTHOR," I think it's better to handle the 【problem】 in 【load】. If you want to preserve the ordering, you can speculate the behavior in the 【load】 command. 【CreateTable】 should not catch this logic, otherwise it's confused to people to understand the create table.If a 【sequence】 column is generated during the 【Load】 command phase, we need to consider the case where the user 【first】 【load】 and specified a 【sequence】 column and then did not, or did not specify a 【sequence】 column the 【first】 time and then specified a 【sequence】 column.  This will make the analysis of the 【load】 phase more 【complicated】",[Proposal] Doris support 【version】 column for REPLACE aggregate type,-1,version;sequence;load;first load;complicated;problem;replace;support;confuse;do;want
9,chaoyli,0.12.0-rc03,2020-07-09 09:50:24,CONTRIBUTOR,"  I think it's better to handle the 【problem】 in 【load】.  If you want to preserve the ordering, you can speculate the behavior in the 【load】 command.  【CreateTable】 should not catch this logic, otherwise it's confused to people to understand the create table.  If a 【sequence】 column is generated during the 【Load】 command phase, we need to consider the case where the user 【first】 【load】 and specified a 【sequence】 column and then did not, or did not specify a 【sequence】 column the 【first】 time and then specified a 【sequence】 column. This will make the analysis of the 【load】 phase more 【complicated】I think it's a 【problem】 about 【stable sort】. If we can ensure the data received lately been 【flush】ed lately.It seems can solve the 【problem】 rightly? ",[Proposal] Doris support 【version】 column for REPLACE aggregate type,-1,version;sequence;load;first load;complicated;problem;stable sort;replace;support;confuse;do;want
10,Youngwb,0.12.0-rc03,2020-07-10 10:10:50,CONTRIBUTOR AUTHOR,""   I think it's better to handle the 【problem】 in 【load】.   If you want to preserve the ordering, you can speculate the behavior in the 【load】 command.   【CreateTable】 should not catch this logic, otherwise it's confused to people to understand the create table.      If a 【sequence】 column is generated during the 【Load】 command phase, we need to consider the case where the user 【first】 【load】 and specified a 【sequence】 column and then did not, or did not specify a 【sequence】 column the 【first】 time and then specified a 【sequence】 column. This will make the analysis of the 【load】 phase more 【complicated】  I think it's a 【problem】 about 【stable sort】. If we can ensure the data received lately been 【flush】ed lately. It seems can solve the 【problem】 rightly?yes, it's a 【problem】 about 【stable sort】,  I don't understand this """"data received lately been 【flush】ed lately.""""  . I think the node responsible for 【flush】 data does not 【guarantee】 orderly receipt of data，for example, the Broker 【Load】 will scan in multiple BE at the same time and send to the corresponding node, so that the order of sending data in the same key column cannot be guaranteed, and the results will be different even if the same source data is loaded multiple times"",[Proposal] Doris support 【version】 column for REPLACE aggregate type,-1,version;sequence;load;first load;complicated;problem;stable sort;replace;support;confuse;do;want"
11,chaoyli,0.12.0-rc03,2020-07-17 11:06:22,CONTRIBUTOR,"@Youngwb Sorry, I am busy  to forget to reply you. If you add 【version】 to data, how to prevent the data lately read with small 【version】?",[Proposal] Doris support 【version】 column for REPLACE aggregate type,-1,version;replace;support;sorry;do
12,Youngwb,0.12.0-rc03,2020-07-20 00:52:35,CONTRIBUTOR AUTHOR," how to prevent the data lately read with small 【version】?The small 【version】 cannot replace the data with bigger 【version】,  it will compare the 【version】 column(or 【sequence】 column) when the key columns are the same.",[Proposal] Doris support 【version】 column for REPLACE aggregate type,0,version;replace;support;do
13,chaoyli,0.12.0-rc03,2020-07-20 11:07:07,CONTRIBUTOR,My 【problem】 is how to set 【version】 in source data in HDFS?If two records have the same key but belongs to different files.The 【version】 is assigned by 【load】 or be assigned in files in HDFS before 【load】?,[Proposal] Doris support 【version】 column for REPLACE aggregate type,-1,version;load;problem;replace;support;assign;do
14,Youngwb,0.12.0-rc03,2020-07-20 11:27:52,CONTRIBUTOR AUTHOR, My 【problem】 is how to set 【version】 in source data in HDFS? If two records have the same key but belongs to different files. The 【version】 is assigned by 【load】 or be assigned in files in HDFS before 【load】?This 【Version】 column is a column in the source data and is specified by the user at 【load】 time ,[Proposal] Doris support 【version】 column for REPLACE aggregate type,-1,version;load;problem;replace;support;assign;do
15,chaoyli,0.12.0-rc03,2020-07-20 18:42:38,CONTRIBUTOR,"I see it. You want to replace the recored according to the the 【version】 specified by user's application.If we add a replace property in 【load】 command, can we use it to do replace behavior without creating a special table?",[Proposal] Doris support 【version】 column for REPLACE aggregate type,1,version;load;replace;support;do;want
16,Youngwb,0.12.0-rc03,2020-07-20 20:25:51,CONTRIBUTOR AUTHOR," I see it. You want to replace the recored according to the the 【version】 specified by user's application. If we add a replace property in 【load】 command, can we use it to do replace behavior without creating a special table?I need to specify the type of 【sequence】 column in the create table statement, and If I create a 【sequence】 column during the 【load】 phase, this columnsadding schema change operation will complicate the 【load】",[Proposal] Doris support 【version】 column for REPLACE aggregate type,-1,version;sequence;load;replace;support;do;want
17,chaoyli,0.12.0-rc03,2020-07-21 10:28:33,CONTRIBUTOR,How about discuss it using WeChat. It may be efficient.My WeChat : 15652918147,[Proposal] Doris support 【version】 column for REPLACE aggregate type,0,version;replace;support;do
18,BabySid,0.12.0-rc03,2020-08-20 10:28:23,CONTRIBUTOR,"有两个场景，麻烦看下：1、是否支持Aggregate表？即表中有replace(replaceifnotnull)【聚合】模式以及其他聚合模式。2、如果表中有多个replace/replaceifnotnull列，不同列的更新版本是不同的。这类的如何支持？是否要针对列做版本如表字段为key1, v1(replace）, v2(replaceifnotnull)几行数据（默认为大的覆盖小的，如v1.2 可以替换v1.0、v1.1）k1, v1.1, (NULL)  = 表数据为k1, v1.1, nullk1, v1.0, v2.1   = 表数据为 k1, v1.1, v2.1k1, v1.3, v2.0  = 表数据为 k1, v1.3, v2.1这个的背景是不同的字段的版本时间不同（业务上一般拿数据生产时间作为版本，不同的字段由于在多个数据流计算，导致生产时间不一致）",[Proposal] Doris support 【version】 column for REPLACE aggregate type,-1,version;replace;aggregation;support;do
